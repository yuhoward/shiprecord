
var subMain = function () {
	var layoutMain = function (initParams) {
		var mainId = (subHandler.mainId) ? subHandler.mainId : subHandler.parentId;
		// var record_start = 0;
		var searchText = '';//所有搜尋條件	
		// var doFirstCount=0;	//為了讓第一個grid只跑一次合併function
		// var doSecondCount=0;//為了讓第二個grid只跑一次合併function
		// var dothirdCount=0;//為了讓第三個grid只跑一次合併function
		var openCloseArr =['uName','cusPo','addPcs','packNo','setDate','serialNumber',
		'serialNumber_inventec','twoD','supplier','place','note',
		'mac','goldThickness','goldDate','goldExp','order_nbr'];//欲隱藏的data index
		var shpStore = new Ext.data.Store({
			proxy: new Ext.data.HttpProxy({ url: subHandler.subController + '&action=loadShp', disableCaching: true, method: 'POST' }),  //disableCaching 禁止快取   //HttpProxy客户端向代理發送請求，代理服务器需要處理請求和連接，同时向服务器發送请求，將收到的響應發给客户端	
			reader: new Ext.data.JsonReader({
				totalProperty: 'total', root: 'data', 
				fields: [
					{ name: 'shpSn', type: 'string'},{ name: 'packageType', type: 'string'},{ name: 'shpDate', type: 'string' }, 
					{ name: 'cusId', type: 'string' }, { name: 'shpNbr', type: 'string' },{ name: 'uName', type: 'string' },
					{ name: 'itemNo', type: 'string' },{ name: 'qty', type: 'string' },{name:'packageCount', type: 'string'}]
			}), remoteSort: true, listeners: {
				load: function () {
					var getTotal = shpStore.data.items.length;
					var norBtn = Ext.getCmp(mainId + '_norExcel');
					var speBtn = Ext.getCmp(mainId + '_speExcel');
					if (getTotal == 0) {
						norBtn.setDisabled(true);
						speBtn.setDisabled(true);
					} else {
						norBtn.setDisabled(false);
						speBtn.setDisabled(false);
					}
				}
			}
		});	
		var boxStore = new Ext.data.Store({
			proxy: new Ext.data.HttpProxy({ url: subHandler.subController + '&action=loadBox', disableCaching: true, method: 'POST' }),  //disableCaching 禁止快取   //HttpProxy客户端向代理發送請求，代理服务器需要處理請求和連接，同时向服务器發送请求，將收到的響應發给客户端	
			reader: new Ext.data.JsonReader({
				totalProperty: 'total', root: 'data', 
				fields: [
					{ name: 'shpSn', type: 'string' },{ name: 'boxSn', type: 'string' },{ name: 'boxYear', type: 'string' },{ name: 'boxID', type: 'string' }, 
					{ name: 'cusPo', type: 'string' },{ name: 'addPcs', type: 'string' },{ name: 'packNo', type: 'string' },{ name: 'uName', type: 'string' },
					{ name: 'setDate', type: 'string' },{ name: 'bundleCount', type: 'string' },{name: 'weight', type: 'string'},{ name: 'itemNo', type: 'string' },
					{ name: 'dateCode', type: 'string' },{ name: 'qty', type: 'string' },{name: 'pSn', type: 'string'},{name: 'pId', type: 'string'}
				]
			}), remoteSort: true, listeners: {
				load: function () {
					// debugger;
					var getTotal = boxStore.data.items.length;
					var norBtn = Ext.getCmp(mainId + '_norExcel');
					var speBtn = Ext.getCmp(mainId + '_speExcel');
					if (getTotal == 0) {
						norBtn.setDisabled(true);
						speBtn.setDisabled(true);
					} else {
						norBtn.setDisabled(false);
						speBtn.setDisabled(false);
					}
				}
			}
		});	
		var bundleStore = new Ext.data.Store({
			proxy: new Ext.data.HttpProxy({ url: subHandler.subController + '&action=loadBundle', disableCaching: true, method: 'POST' }),  //disableCaching 禁止快取   //HttpProxy客户端向代理發送請求，代理服务器需要處理請求和連接，同时向服务器發送请求，將收到的響應發给客户端	
			reader: new Ext.data.JsonReader({
				totalProperty: 'total', root: 'data', 
				fields: [
				{ name: 'bundleSn', type: 'string' },{ name: 'bundleId'},{ name: 'cusId', type: 'string' }, { name: 'itemNo', type: 'string' },{ name: 'cusItemNo', type: 'string' },
				{ name: 'moNbr', type: 'string' },{ name: 'qty', type: 'string' },{ name: 'dateCode', type: 'string' }, { name: 'scrapped', type: 'string' }, { name: 'serialNumber', type: 'string' }, 
				{ name: 'serialNumber_inventec', type: 'string' }, { name: 'weight', type: 'string' }, { name: 'twoD', type: 'string' }, { name: 'supplier', type: 'string' }, { name: 'place', type: 'string' }, 
				{ name: 'note', type: 'string' }, { name: 'mac', type: 'string' }, { name: 'goldThickness', type: 'string' }, { name: 'goldDate', type: 'string' }, { name: 'goldExp', type: 'string' }, 
				{ name: 'uName', type: 'string' },  { name: 'setDate', type: 'string' },  { name: 'order_nbr', type: 'string' },		
				]
			}), remoteSort: true, listeners: {
				load: function () {
					// debugger;
					var getTotal = bundleStore.data.items.length;
					var norBtn = Ext.getCmp(mainId + '_norExcel');
					var speBtn = Ext.getCmp(mainId + '_speExcel');
					if (getTotal == 0) {
						norBtn.setDisabled(true);
						speBtn.setDisabled(true);
					} else {
						norBtn.setDisabled(false);
						speBtn.setDisabled(false);
					}
				}
			}
		});					

		var firstGrid = new Ext.grid.EditorGridPanel({
			height:1500,
			store: shpStore,
			title: '出貨資訊',						
			loadMask: true,
			enableColumnMove: true,
			trackMouseOver:true,//#鼠標移動的地方會有光影效果
			sm: new Ext.grid.RowSelectionModel({
				singleSelect: false,
				listeners: {
				
					rowselect: function (sm, row, rec) {
						var shpSn = rec.get('shpSn');
						var shpNbr = rec.get('shpNbr');
						secondGrid.getTopToolbar().get('secondGridtitle').setText('<font  color="#15428b" ><div style=font-weight:bold>裝箱資訊('+shpNbr+')</div></font>');
						bundleStore.removeAll();
						boxStore.setBaseParam('shpSn', shpSn);
						boxStore.load();
						// if(doSecondCount<1){
						// 	doSecondCount++;
						// 	boxStore.on("load",function(){gridSpan(secondGrid,"row","[cusPo],[uName],[itemNo]");});
						// }


						// secondGrid.set('title')=shpSn;
						// secondGrid.title=shpSn
						
					}
				}
			}),
			cm: new Ext.grid.ColumnModel({
				columns: [		
				
			//!永遠隱藏
			{header: 'shpSn',dataIndex: 'shpSn', hidden:true},
			{header: 'packageType',dataIndex: 'packageType', hidden:true},
			//!永遠隱藏	
			{header: '出貨時間', dataIndex: 'shpDate', width: 130,},
			{header: '客戶代號', dataIndex: 'cusId', width: 60,},
			{header: '出貨單號', dataIndex: 'shpNbr', width: 80,},
			//!一鍵隱藏時要隱藏
			{header: '出貨人員', dataIndex: 'uName', width: 60,hidden:true},
			//!一鍵隱藏時要隱藏
			{ header: '料號', dataIndex: 'itemNo' },
			{ header: '總數量', dataIndex: 'qty',align:'right',
				renderer:function(value, meta, record){
					num = value + ""; 
					if (num.indexOf(',') > 0) { 
						num = num.replace(/,/gi, '') + ""; 
					} 
					var re = /(-?\d+)(\d{3})/; 
					while (re.test(num)) {
						num = num.replace(re, "$1,$2"); 
					}
						return num;
				}
			},
			{ header: '總箱數',dataIndex:'packageCount', align:'right',width: 60,
				renderer:function(value, meta, record){
					num = value + ""; 
					if (num.indexOf(',') > 0) { 
						num = num.replace(/,/gi, '') + ""; 
					} 
					var re = /(-?\d+)(\d{3})/; 
					while (re.test(num)) {
						num = num.replace(re, "$1,$2"); 
					}
						return num;
				}
			}	
				]
			}),
			
			listeners: {
				afterrender() {
					var searchObj = new Object;
					searchObj.setDate = Ext.util.Format.date(new Date(), 'Y-m-d') + ',' + Ext.util.Format.date(new Date(), 'Y-m-d');
					shpStore.setBaseParam('searchItem', JSON.stringify(searchObj));
					shpStore.load();
					// if(doFirstCount<1){
					// 	doFirstCount++;
					// 	shpStore.on("load",function(){gridSpan(firstGrid,"row","[cusId],[uName]");});
					// }
				},
				

			},
			viewConfig: {
				
				enableTextSelection: true
			},
		});
		var secondGrid = new Ext.grid.EditorGridPanel({
			height:1500,
			store: boxStore,
			hideTitle: true,
			// title: '裝箱資訊',
			trackMouseOver:true,//#鼠標移動的地方會有光影效果
			border:false,
			loadMask: true,
			sm: new Ext.grid.RowSelectionModel({
				singleSelect: false,
				listeners: {
					rowselect: function (sm, row, rec) {
						var boxSn = rec.get('boxSn');
						var boxYear = rec.get('boxYear');

						thirdGrid.getTopToolbar().get('thirdGridtitle').setText('<font color="#15428b" ><div style=font-weight:bold>內包資訊('+rec.get('boxID')+')</div></font>');
						bundleStore.setBaseParam('boxSn', boxSn);
						bundleStore.setBaseParam('boxYear', boxYear);
						bundleStore.load();

						// if(dothirdCount<1){		
						// 	dothirdCount++;	
						// 	bundleStore.on("load",function(){gridSpan(thirdGrid,"row","[cusId],[itemNo],[cusItemNo],[moNbr],[dateCode],[mac],[goldDate],[goldExp],[uName],[setDate]");});
						// }
					}
				}
			}),
			cm: new Ext.grid.ColumnModel({
				columns: [
					//!永久隱藏
					{header: 'shpSn',dataIndex: 'shpSn', hidden:true,},
					{header: 'boxSn',dataIndex: 'boxSn', hidden:true,},
					{header: 'boxYear',dataIndex: 'boxYear', hidden:true,},
					//----------------------------------------------------------
					{header: 'BoxID', dataIndex: 'boxID', width: 100,},
					//!一鍵隱藏時隱藏
					{header: '客戶PO', dataIndex: 'cusPo', width: 120, hidden:true},
					{header: '贈送數量', dataIndex: 'addPcs', width: 80, hidden:true,align:'right'},
					{header: '箱號', dataIndex: 'packNo', width: 40,hidden:true},
					{header: '裝箱日期', dataIndex: 'setDate',  width: 130,hidden:true},
					{header: '裝箱人員', dataIndex: 'uName', width: 60, hidden:true},
					//----------------------------------------------------------
					{ header: '料號', dataIndex: 'itemNo' },
					{ header: 'D/C', dataIndex: 'dateCode', width: 80 },
					{ header: '數量', dataIndex: 'qty',align:'right',width: 50 ,
						renderer:function(value, meta, record){
							num = value + ""; 
							if (num.indexOf(',') > 0) { 
								num = num.replace(/,/gi, '') + ""; 
							} 
							var re = /(-?\d+)(\d{3})/; 
							while (re.test(num)) {
								num = num.replace(re, "$1,$2"); 
							}
								return num;
						} 
					},
					{ header: '包數', dataIndex: 'bundleCount',align:'right',width: 60,},
					{ header: '箱重', dataIndex: 'weight',align:'right',width: 60,},
					//!永久隱藏
					{ header: 'pSn', dataIndex: 'weight',width: 60,hidden:true},
					//----------------------------------------------------------
					{ header: '棧板ID', dataIndex: 'pId',width: 90,},
				]
			}),
			listeners: {
				afterrender() {
				}
			},
			tbar: [
				{	
					xtype: 'tbtext',
					itemId: 'secondGridtitle',
					text: '<font color="#15428b" ><div style=font-weight:bold>裝箱資訊</div></font>',	
				},
				'->',
				{
					text: '刷新',
					iconCls: 'refresh',
					handler: function (b) {
						secondGrid.store.reload();
					}
				},
			]
		});
		var thirdGrid = new Ext.grid.EditorGridPanel({			
			store: bundleStore,
			// hideHeaders: true,
			// title: '內包資訊(boxID)',
			trackMouseOver:true,//#鼠標移動的地方會有光影效果
			height:1500,			
			border:false,
			loadMask: true,
			sm: new Ext.grid.RowSelectionModel({
				singleSelect: false,
				listeners: {
					rowselect: function (sm, row, rec) {}
				}
			}),
			cm: new Ext.grid.ColumnModel({
				columns: [

					{ header: 'BundleID', dataIndex: 'bundleId', width: 130 },
					{ header: '客戶代號', dataIndex: 'cusId', width: 60,},
					{ header: '料號', dataIndex: 'itemNo', },
					{ header: '客戶料號', dataIndex: 'cusItemNo', width: 130 },
					{ header: '製令', dataIndex: 'moNbr', width: 130 },
					{ header: '數量', dataIndex: 'qty', width: 50,align:'right',
						renderer:function(value, meta, record){
							num = value + ""; 
							if (num.indexOf(',') > 0) { 
								num = num.replace(/,/gi, '') + ""; 
							} 
							var re = /(-?\d+)(\d{3})/; 
							while (re.test(num)) {
								num = num.replace(re, "$1,$2"); 
							}
								return num;
						}
					},
					{ header: 'D/C', dataIndex: 'dateCode', width: 70 },
					{ header: '報廢數', dataIndex: 'scrapped', width: 60 ,},
					{ header: '流水碼', dataIndex: 'serialNumber', width: 60 ,hidden:true},
					{ header: '英業達流水碼', dataIndex: 'serialNumber_inventec', width: 60 ,hidden:true},
					{ header: '包重', dataIndex: 'weight', width: 50 ,align:'right',},
					{ header: '二維碼資訊', dataIndex: 'twoD' , width: 60,hidden:true},
					{ header: '英業達Supplier', dataIndex: 'supplier' , width: 60,hidden:true},
					{ header: '英業達Place', dataIndex: 'place' , width: 60,hidden:true},
					{ header: '供應商', dataIndex: 'note' , width: 60,hidden:true},
					{ header: '電腦Mac', dataIndex: 'mac' , width: 130,hidden:true},
					{ header: '鍍金厚度', dataIndex: 'goldThickness' , width: 80,align:'right',hidden:true,},
					{ header: '鍍金時間', dataIndex: 'goldDate' , width: 130,hidden:true},
					{ header: '鍍金到期日', dataIndex: 'goldExp' , width: 130,hidden:true},
					{ header: '包裝人員', dataIndex: 'uName', width: 60,hidden:true},
					{ header: '包裝時間', dataIndex: 'setDate', width: 130,hidden:true},
					{ header: '預排單號', dataIndex: 'order_nbr' , width: 80,hidden:true},
							
				]
			}),
			tbar: [
				{	
					xtype: 'tbtext',
					itemId: 'thirdGridtitle',
					text: '<font color="#15428b" ><div style=font-weight:bold>內包資訊</div></font>',
				},
				'->',
				{
					text: '刷新',
					iconCls: 'refresh',
					handler: function (b) {
						thirdGrid.store.reload();
					}
				},
			]
		});

		//搜尋
		var search = function () {
			var searchObj = new Object;
			searchObj.setDate = Ext.util.Format.date(Ext.getCmp(mainId + '_startYM').getValue(), 'Y-m-d') + ',' + Ext.util.Format.date(Ext.getCmp(mainId + '_endYM').getValue(), 'Y-m-d');
			if (Ext.getCmp(mainId + '_cusCheck').getValue() == 1) {
				if (Ext.getCmp(mainId + '_cusSearch').getValue() != '') {
					searchObj.cusId = Ext.getCmp(mainId + '_cusSearch').getValue();
				}
			}
			if (Ext.getCmp(mainId + '_shpCheck').getValue() == 1) {
				if (Ext.getCmp(mainId + '_shpSearch').getValue() != '') {
					searchObj.shpNbr = Ext.getCmp(mainId + '_shpSearch').getValue();
				}
			}
			if (Ext.getCmp(mainId + '_boxCheck').getValue() == 1) {
				if (Ext.getCmp(mainId + '_boxSearch').getValue() != '') {
					searchObj.boxID = Ext.getCmp(mainId + '_boxSearch').getValue();
				}
			}
			if (Ext.getCmp(mainId + '_bundleCheck').getValue() == 1) {
				if (Ext.getCmp(mainId + '_bundleSearch').getValue() != '') {
					searchObj.bundleId = Ext.getCmp(mainId + '_bundleSearch').getValue();
				}
			}
			if (Ext.getCmp(mainId + '_pnCheck').getValue() == 1) {
				if (Ext.getCmp(mainId + '_pnSearch').getValue() != '') {
					searchObj.itemNo = Ext.getCmp(mainId + '_pnSearch').getValue();
				}
			}
			if (Ext.getCmp(mainId + '_qtyCheck').getValue() == 1) {
				if (Ext.getCmp(mainId + '_qtySearch').getValue() != '') {
					searchObj.qty = Ext.getCmp(mainId + '_qtySearch').getValue();
				}
			}
			if (Ext.getCmp(mainId + '_dcCheck').getValue() == 1) {
				if (Ext.getCmp(mainId + '_dcSearch').getValue() != '') {
					searchObj.dateCode = Ext.getCmp(mainId + '_dcSearch').getValue();
				}
			}
			if (Ext.getCmp(mainId + '_lotCheck').getValue() == 1) {
				if (Ext.getCmp(mainId + '_lotSearch').getValue() != '') {
					searchObj.moNbr = Ext.getCmp(mainId + '_lotSearch').getValue();
				}
			}
			if (Ext.getCmp(mainId + '_scrappedCheck').getValue() == 1) {
				if (Ext.getCmp(mainId + '_scrappedSearch').getValue() != '') {
					searchObj.scrapped = Ext.getCmp(mainId + '_scrappedSearch').getValue();
				}
			}
			if (Ext.getCmp(mainId + '_serialCheck').getValue() == 1) {
				if (Ext.getCmp(mainId + '_serialSearch').getValue() != '') {
					searchObj.serialNumber = Ext.getCmp(mainId + '_serialSearch').getValue();
				}
			}
			if (Ext.getCmp(mainId + '_serial2Check').getValue() == 1) {
				if (Ext.getCmp(mainId + '_serial2Search').getValue() != '') {
					searchObj.serialNumber_inventec = Ext.getCmp(mainId + '_serial2Search').getValue();
				}
			}
			if (Ext.getCmp(mainId + '_noteCheck').getValue() == 1) {
				if (Ext.getCmp(mainId + '_noteSearch').getValue() != '') {
					searchObj.note = Ext.getCmp(mainId + '_noteSearch').getValue();
				}
			}
			if (Ext.getCmp(mainId + '_orderCheck').getValue() == 1) {
				if (Ext.getCmp(mainId + '_orderSearch').getValue() != '') {
					searchObj.order_nbr = Ext.getCmp(mainId + '_orderSearch').getValue();
				}
			}
			shpStore.setBaseParam('searchItem', JSON.stringify(searchObj));
			shpStore.load();
			// if(doFirstCount<1){
			// 	doFirstCount++;
			// 	shpStore.on("load",function(){gridSpan(firstGrid,"row","[cusId],[uName]");});
			// }
			boxStore.removeAll();
			bundleStore.removeAll();
		
			Ext.getCmp(mainId + '_searchBox').setText('<font color=red>篩選</font>');
			Ext.getCmp(mainId + '_searchMenu').hide();
		};
		//一鍵打開一鍵關閉的function
		var openClose = function(grid,target,type){
			var columns = grid.getColumnModel().columns;
			for (var i=0,totalL=columns.length;i<totalL;i++) { 
				if (target.indexOf(columns[i].dataIndex)!=-1){
					grid.getColumnModel().setHidden(grid.getColumnModel().findColumnIndex(columns[i].dataIndex), type);
				} 
			}
		};
		var gridPanel = new Ext.Panel({
			layout: 'border',
			border:false,
			width:'100%',
			defaults: {
				layout:'fit',
				split: true, // 調整大小	
			},
			items: [
				{
					items:firstGrid,
					region:'center',
					width:'40%',
				},
				{
					items:secondGrid,
					region:'east',
					width:'60%',
				},
				],
		});
		var allGrid = new Ext.Panel({
			
			tbar: [
				{	text: '篩選',iconCls: 'search', id: mainId + '_searchBox', 
					tooltip: '出貨時間篩選<br>客戶代號篩選<br>出貨單號篩選<br>BoxID篩選<br>BundleID篩選<br>料號篩選<br>數量篩選<br>Date Code篩選<br>製令篩選<br>報廢數篩選<br>流水碼篩選<br>特殊流水碼篩選<br>供應商篩選<br>預排單號篩選', 
					menu:	new Ext.menu.Menu({
							id: mainId + '_searchMenu', labelWidth: 90, hasLayout: false, hideOnClick: true, allowOtherMenus: true, plain: true, layout: 'form', width: 350, labelAlign: 'left', items: [
								{	xtype: 'container', layout: 'column', items: [{ xtype: 'label', text: ' ', style: 'font-size:11px;padding:0px 0px 2px 0px' }] },
								{	xtype: 'container', layout: 'column', items: [
										{xtype: 'label', text: ' ', style: 'font-size:11px;padding:8px 4px 18px 3px' },
										{xtype: 'label', text: '日期', style: 'font-size:13px;font-family:verdana;padding:2px 0px 6px 70px' },
										{xtype: 'label', text: ':', style: ' font-size:12px;font-family:verdana;padding:2px 4px 3px 1px' },
										{	xtype: 'datefield',
											width: 100,
											format: 'Y-m-d',
											fieldLabel: '日期',
											value: new Date(),
											id: mainId + "_startYM",
											editable: false,
											getListParent: function () { return this.el.up('.x-menu'); },
											menu: new Ext.menu.DateMenu({ hideOnClick: true, allowOtherMenus: true }),
											listeners: {
												select(_this, date) {
													// search();
												}
											}
										},
										{xtype: 'label', text: ' ~ ', style: ' font-size:12px;font-family:verdana;padding:2px 4px 3px 1px' },
										{	xtype: 'datefield',
											width: 100,
											format: 'Y-m-d',
											fieldLabel: '日期',
											value: new Date(),
											id: mainId + "_endYM",
											editable: false,
											getListParent: function () { return this.el.up('.x-menu'); },
											menu: new Ext.menu.DateMenu({ hideOnClick: true, allowOtherMenus: true }),
											listeners: {
												select(_this, date) {
													// search();
												}
											}
										},
									]
								},
								{	xtype: 'container', layout: 'column', items: [
										{xtype: 'label', text: ' ', style: 'font-size:11px;padding:8px 4px 18px 3px' },
										{xtype: 'checkbox', readOnly: false, id: mainId + '_cusCheck', style: 'padding:4px 4px 4px 4px', checked: true },
										{xtype: 'label', text: '客戶代號', style: 'font-size:13px;font-family:verdana;padding:2px 0px 6px 24px' },
										{xtype: 'label', text: ':', style: ' font-size:12px;font-family:verdana;padding:2px 4px 3px 1px' },
										{xtype: 'textfield', width: 120, id: mainId + '_cusSearch', emptyText: '', labelStyle: 'text-align:right;', enableKeyEvents: true, value: '',
											listeners: {
												change(_this, newValue, oldValue) {
													if (newValue == '') searchText = searchText.replace(oldValue, '');
													else {
														searchText = searchText.replace(oldValue, '');
														searchText += newValue;
													}
													// Ext.ux.TopMsg.msg("提示",searchText,2,200);
												},
												specialkey: function (_this, e) {
													if (e.getKey() == e.ENTER) {
														search();
													}
												}
											}
										}
									]
								},
								{	xtype: 'container', layout: 'column', items: [
										{xtype: 'label', text: ' ', style: 'font-size:11px;padding:8px 4px 18px 3px' },
										{xtype: 'checkbox', readOnly: false, id: mainId + '_shpCheck', style: 'padding:4px 4px 4px 4px', checked: true },
										{xtype: 'label', text: '出貨單號', style: 'font-size:13px;font-family:verdana;padding:2px 0px 6px 24px' },
										{xtype: 'label', text: ':', style: ' font-size:12px;font-family:verdana;padding:2px 4px 3px 1px' },
										{xtype: 'textfield', width: 120, id: mainId + '_shpSearch', emptyText: '', labelStyle: 'text-align:right;', enableKeyEvents: true, value: '',
											listeners: {
												change(_this, newValue, oldValue) {
													if (newValue == '') searchText = searchText.replace(oldValue, '');
													else {
														searchText = searchText.replace(oldValue, '');
														searchText += newValue;
													}
												},
												specialkey: function (_this, e) {
													if (e.getKey() == e.ENTER) {
														search();
													}
												}
											}
										}
									]
								},
								{	xtype: 'container', layout: 'column', items: [
										{xtype: 'label', text: ' ', style: 'font-size:11px;padding:8px 4px 18px 3px' },
										{xtype: 'checkbox', readOnly: false, id: mainId + '_boxCheck', style: 'padding:4px 4px 4px 4px', checked: true },
										{xtype: 'label', text: 'BoxID', style: 'font-size:13px;font-family:verdana;padding:2px 0px 6px 36px' },
										{xtype: 'label', text: ':', style: ' font-size:12px;font-family:verdana;padding:2px 4px 3px 1px' },
										{xtype: 'textfield', width: 120, id: mainId + '_boxSearch', emptyText: '', labelStyle: 'text-align:right;', enableKeyEvents: true, value: '',
											listeners: {
												change(_this, newValue, oldValue) {
													if (newValue == '') searchText = searchText.replace(oldValue, '');
													else {
														searchText = searchText.replace(oldValue, '');
														searchText += newValue;
													}
												},
												specialkey: function (_this, e) {
													if (e.getKey() == e.ENTER) {
														search();
													}
												}
											}
										}
									]
								},
								{	xtype: 'container', layout: 'column', items: [
										{xtype: 'label', text: ' ', style: 'font-size:11px;padding:8px 4px 18px 3px' },
										{xtype: 'checkbox', readOnly: false, id: mainId + '_bundleCheck', style: 'padding:4px 4px 4px 4px', checked: true },
										{xtype: 'label', text: 'BundleID', style: 'font-size:13px;font-family:verdana;padding:2px 0px 6px 14px' },
										{xtype: 'label', text: ':', style: ' font-size:12px;font-family:verdana;padding:2px 4px 3px 1px' },
										{xtype: 'textfield', width: 120, id: mainId + '_bundleSearch', emptyText: '', labelStyle: 'text-align:right;', enableKeyEvents: true, value: '',
											listeners: {
												change(_this, newValue, oldValue) {
													if (newValue == '') searchText = searchText.replace(oldValue, '');
													else {
														searchText = searchText.replace(oldValue, '');
														searchText += newValue;
													}
												},
												specialkey: function (_this, e) {
													if (e.getKey() == e.ENTER) {
														search();
													}
												}
											}
										}
									]
								},
								{	xtype: 'container', layout: 'column', items: [
										{xtype: 'label', text: ' ', style: 'font-size:11px;padding:8px 4px 18px 3px' },
										{xtype: 'checkbox', readOnly: false, id: mainId + '_pnCheck', style: 'padding:4px 4px 4px 4px', checked: true },
										{xtype: 'label', text: '料號', style: 'font-size:13px;font-family:verdana;padding:2px 0px 6px 49px' },
										{xtype: 'label', text: ':', style: ' font-size:12px;font-family:verdana;padding:2px 4px 3px 1px' },
										{xtype: 'textfield', width: 120, id: mainId + '_pnSearch', emptyText: '', labelStyle: 'text-align:right;', enableKeyEvents: true, value: '',
											listeners: {
												change(_this, newValue, oldValue) {
													if (newValue == '') searchText = searchText.replace(oldValue, '');
													else {
														searchText = searchText.replace(oldValue, '');
														searchText += newValue;
													}
												},
												specialkey: function (_this, e) {
													if (e.getKey() == e.ENTER) {
														search();
													}
												}
											}
										}
									]
								},
								{	xtype: 'container', layout: 'column', items: [
										{xtype: 'label', text: ' ', style: 'font-size:11px;padding:8px 4px 18px 3px' },
										{xtype: 'checkbox', readOnly: false, id: mainId + '_qtyCheck', style: 'padding:4px 4px 4px 4px', checked: true },
										{xtype: 'label', text: '數量', style: 'font-size:13px;font-family:verdana;padding:2px 0px 6px 49px' },
										{xtype: 'label', text: ':', style: ' font-size:12px;font-family:verdana;padding:2px 4px 3px 1px' },
										{xtype: 'textfield', width: 120, id: mainId + '_qtySearch', emptyText: '', labelStyle: 'text-align:right;', enableKeyEvents: true, value: '',
											listeners: {
												change(_this, newValue, oldValue) {
													if (newValue == '') searchText = searchText.replace(oldValue, '');
													else {
														searchText = searchText.replace(oldValue, '');
														searchText += newValue;
													}
												},
												specialkey: function (_this, e) {
													if (e.getKey() == e.ENTER) {
														search();
													}
												}
											}
										}
									]
								},
								{	xtype: 'container', layout: 'column', items: [
										{xtype: 'label', text: ' ', style: 'font-size:11px;padding:8px 4px 18px 3px' },
										{xtype: 'checkbox', readOnly: false, id: mainId + '_dcCheck', style: 'padding:4px 4px 4px 4px', checked: true },
										{xtype: 'label', text: 'Date Code', style: 'font-size:13px;font-family:verdana;padding:2px 0px 6px 6px' },
										{xtype: 'label', text: ':', style: ' font-size:12px;font-family:verdana;padding:2px 4px 3px 1px' },
										{xtype: 'textfield', width: 120, id: mainId + '_dcSearch', emptyText: '', labelStyle: 'text-align:right;', enableKeyEvents: true, value: '',
											listeners: {
												change(_this, newValue, oldValue) {
													if (newValue == '') searchText = searchText.replace(oldValue, '');
													else {
														searchText = searchText.replace(oldValue, '');
														searchText += newValue;
													}
												},
												specialkey: function (_this, e) {
													if (e.getKey() == e.ENTER) {
														search();
													}
												}
											}
										}
									]
								},
								{	xtype: 'container', layout: 'column', items: [
										{xtype: 'label', text: ' ', style: 'font-size:11px;padding:8px 4px 18px 3px' },
										{xtype: 'checkbox', readOnly: false, id: mainId + '_lotCheck', style: 'padding:4px 4px 4px 4px', checked: true },
										{xtype: 'label', text: '製令', style: 'font-size:13px;font-family:verdana;padding:2px 0px 6px 49px' },
										{xtype: 'label', text: ':', style: ' font-size:12px;font-family:verdana;padding:2px 4px 3px 1px' },
										{xtype: 'textfield', width: 120, id: mainId + '_lotSearch', emptyText: '', labelStyle: 'text-align:right;', enableKeyEvents: true, value: '',
											listeners: {
												change(_this, newValue, oldValue) {
													if (newValue == '') searchText = searchText.replace(oldValue, '');
													else {
														searchText = searchText.replace(oldValue, '');
														searchText += newValue;
													}
												},
												specialkey: function (_this, e) {
													if (e.getKey() == e.ENTER) {
														search();
													}
												}
											}
										}
									]
								},
								{	xtype: 'container', layout: 'column', items: [
										{xtype: 'label', text: ' ', style: 'font-size:11px;padding:8px 4px 18px 3px' },
										{xtype: 'checkbox', readOnly: false, id: mainId + '_scrappedCheck', style: 'padding:4px 4px 4px 4px', checked: true },
										{xtype: 'label', text: '報廢數', style: 'font-size:13px;font-family:verdana;padding:2px 0px 6px 36px' },
										{xtype: 'label', text: ':', style: ' font-size:12px;font-family:verdana;padding:2px 4px 3px 1px' },
										{xtype: 'textfield', width: 120, id: mainId + '_scrappedSearch', emptyText: '', labelStyle: 'text-align:right;', enableKeyEvents: true, value: '',
											listeners: {
												change(_this, newValue, oldValue) {
													if (newValue == '') searchText = searchText.replace(oldValue, '');
													else {
														searchText = searchText.replace(oldValue, '');
														searchText += newValue;
													}
												},
												specialkey: function (_this, e) {
													if (e.getKey() == e.ENTER) {
														search();
													}
												}
											}
										}
									]
								},
								{	xtype: 'container', layout: 'column', items: [
										{xtype: 'label', text: ' ', style: 'font-size:11px;padding:8px 4px 18px 3px' },
										{xtype: 'checkbox', readOnly: false, id: mainId + '_serialCheck', style: 'padding:4px 4px 4px 4px', checked: true },
										{xtype: 'label', text: '流水碼', style: 'font-size:13px;font-family:verdana;padding:2px 0px 6px 36px' },
										{xtype: 'label', text: ':', style: ' font-size:12px;font-family:verdana;padding:2px 4px 3px 1px' },
										{xtype: 'textfield', width: 120, id: mainId + '_serialSearch', emptyText: '', labelStyle: 'text-align:right;', enableKeyEvents: true, value: '',
											listeners: {
												change(_this, newValue, oldValue) {
													if (newValue == '') searchText = searchText.replace(oldValue, '');
													else {
														searchText = searchText.replace(oldValue, '');
														searchText += newValue;
													}
												},
												specialkey: function (_this, e) {
													if (e.getKey() == e.ENTER) {
														search();
													}
												}
											}
										}
									]
								},
								{	xtype: 'container', layout: 'column', items: [
										{xtype: 'label', text: ' ', style: 'font-size:11px;padding:8px 4px 18px 3px' },
										{xtype: 'checkbox', readOnly: false, id: mainId + '_serial2Check', style: 'padding:4px 4px 4px 4px', checked: true },
										{xtype: 'label', text: '特殊流水碼', style: 'font-size:13px;font-family:verdana;padding:2px 0px 6px 10px' },
										{xtype: 'label', text: ':', style: ' font-size:12px;font-family:verdana;padding:2px 4px 3px 1px' },
										{xtype: 'textfield', width: 120, id: mainId + '_serial2Search', emptyText: '', labelStyle: 'text-align:right;', enableKeyEvents: true, value: '',
											listeners: {
												change(_this, newValue, oldValue) {
													if (newValue == '') searchText = searchText.replace(oldValue, '');
													else {
														searchText = searchText.replace(oldValue, '');
														searchText += newValue;
													}
												},
												specialkey: function (_this, e) {
													if (e.getKey() == e.ENTER) {
														search();
													}
												}
											}
										}
									]
								},
								{	xtype: 'container', layout: 'column', items: [
										{xtype: 'label', text: ' ', style: 'font-size:11px;padding:8px 4px 18px 3px' },
										{xtype: 'checkbox', readOnly: false, id: mainId + '_noteCheck', style: 'padding:4px 4px 4px 4px', checked: true },
										{xtype: 'label', text: '供應商', style: 'font-size:13px;font-family:verdana;padding:2px 0px 6px 36px' },
										{xtype: 'label', text: ':', style: ' font-size:12px;font-family:verdana;padding:2px 4px 3px 1px' },
										{xtype: 'textfield', width: 120, id: mainId + '_noteSearch', emptyText: '', labelStyle: 'text-align:right;', enableKeyEvents: true, value: '',
											listeners: {
												change(_this, newValue, oldValue) {
													if (newValue == '') searchText = searchText.replace(oldValue, '');
													else {
														searchText = searchText.replace(oldValue, '');
														searchText += newValue;
													}
												},
												specialkey: function (_this, e) {
													if (e.getKey() == e.ENTER) {
														search();
													}
												}
											}
										}
									]
								},
								{	xtype: 'container', layout: 'column', items: [
										{xtype: 'label', text: ' ', style: 'font-size:11px;padding:8px 4px 18px 3px' },
										{xtype: 'checkbox', readOnly: false, id: mainId + '_orderCheck', style: 'padding:4px 4px 4px 4px', checked: true },
										{xtype: 'label', text: '預排單號', style: 'font-size:13px;font-family:verdana;padding:2px 0px 6px 23px' },
										{xtype: 'label', text: ':', style: ' font-size:12px;font-family:verdana;padding:2px 4px 3px 1px' },
										{xtype: 'textfield', width: 120, id: mainId + '_orderSearch', emptyText: '', labelStyle: 'text-align:right;', enableKeyEvents: true, value: '',
											listeners: {
												change(_this, newValue, oldValue) {
													if (newValue == '') searchText = searchText.replace(oldValue, '');
													else {
														searchText = searchText.replace(oldValue, '');
														searchText += newValue;
													}
												},
												specialkey: function (_this, e) {
													if (e.getKey() == e.ENTER) {
														search();
													}
												}
											}
										}
									]
								},
								{	xtype: 'container', layout: 'column', items: [
										{xtype: 'label', text: ' ', style: 'font-size:11px;padding:8px 4px 18px 180px' },
										{xtype: 'button', text: '篩選', iconCls: 'search', id: mainId + '_SearchBtn', listeners: {
												click: function (b) {
													if (Ext.util.Format.date(Ext.getCmp(mainId + "_startYM").getValue().add(Date.MONTH, (searchText == '' ? +1 : +3)), 'Y-m-d') < Ext.util.Format.date(Ext.getCmp(mainId + "_endYM").getValue(), 'Y-m-d')) {
														Ext.ux.TopMsg.msg("提示", '搜尋區間不可超過' + (searchText == '' ? '1' : '3') + '個月', 2, 200);
														Ext.getCmp(mainId + "_endYM").setValue(Ext.util.Format.date(Ext.getCmp(mainId + "_startYM").getValue().add(Date.MONTH, (searchText == '' ? +1 : +3)), 'Y-m-d'));
													}
													else if (Ext.util.Format.date(Ext.getCmp(mainId + "_startYM").getValue(), 'Y-m-d') > Ext.util.Format.date(Ext.getCmp(mainId + "_endYM").getValue(), 'Y-m-d')) {
														Ext.ux.TopMsg.msg("提示", '開始日期不可大於結束日期', 2, 200);
														Ext.getCmp(mainId + "_endYM").setValue(Ext.util.Format.date(Ext.getCmp(mainId + "_startYM").getValue(), 'Y-m-d'));
													}
													else if (Ext.util.Format.date(Ext.getCmp(mainId + "_endYM").getValue().add(Date.MONTH, (searchText == '' ? -1 : -3)), 'Y-m-d') > Ext.util.Format.date(Ext.getCmp(mainId + "_startYM").getValue(), 'Y-m-d')) {
														Ext.ux.TopMsg.msg("提示", '搜尋區間不可超過' + (searchText == '' ? '1' : '3') + '個月', 2, 200);
														Ext.getCmp(mainId + "_startYM").setValue(Ext.util.Format.date(Ext.getCmp(mainId + "_endYM").getValue().add(Date.MONTH, (searchText == '' ? -1 : -3)), 'Y-m-d'));
													}
													else if (Ext.util.Format.date(Ext.getCmp(mainId + "_endYM").getValue(), 'Y-m-d') < Ext.util.Format.date(Ext.getCmp(mainId + "_startYM").getValue(), 'Y-m-d')) {
														Ext.ux.TopMsg.msg("提示", '結束日期不可小於開始日期', 2, 200);
														Ext.getCmp(mainId + "_startYM").setValue(Ext.util.Format.date(Ext.getCmp(mainId + "_endYM").getValue(), 'Y-m-d'));
													}
													else search();
												}
											}
										},
										{xtype: 'label', text: ' ', style: 'font-size:11px;padding:8px 4px 18px 10px' },
										{xtype: 'button', text: '清除', iconCls: 'clear ', id: mainId + '_cancelBtn', listeners: {
												click: function (b) {
													searchText = '';
													Ext.getCmp(mainId + "_startYM").setValue(new Date());
													Ext.getCmp(mainId + "_endYM").setValue(new Date());

													Ext.getCmp(mainId + '_cusCheck').setValue(1);
													Ext.getCmp(mainId + '_cusSearch').setValue('');

													Ext.getCmp(mainId + '_shpCheck').setValue(1);
													Ext.getCmp(mainId + '_shpSearch').setValue('');

													Ext.getCmp(mainId + '_boxCheck').setValue(1);
													Ext.getCmp(mainId + '_boxSearch').setValue('');

													Ext.getCmp(mainId + '_bundleCheck').setValue(1);
													Ext.getCmp(mainId + '_bundleSearch').setValue('');

													Ext.getCmp(mainId + '_pnCheck').setValue(1);
													Ext.getCmp(mainId + '_pnSearch').setValue('');

													Ext.getCmp(mainId + '_qtyCheck').setValue(1);
													Ext.getCmp(mainId + '_qtySearch').setValue('');

													Ext.getCmp(mainId + '_dcCheck').setValue(1);
													Ext.getCmp(mainId + '_dcSearch').setValue('');

													Ext.getCmp(mainId + '_lotCheck').setValue(1);
													Ext.getCmp(mainId + '_lotSearch').setValue('');

													Ext.getCmp(mainId + '_scrappedCheck').setValue(1);
													Ext.getCmp(mainId + '_scrappedSearch').setValue('');

													Ext.getCmp(mainId + '_serialCheck').setValue(1);
													Ext.getCmp(mainId + '_serialSearch').setValue('');

													Ext.getCmp(mainId + '_serial2Check').setValue(1);
													Ext.getCmp(mainId + '_serial2Search').setValue('');

													Ext.getCmp(mainId + '_noteCheck').setValue(1);
													Ext.getCmp(mainId + '_noteSearch').setValue('');

													Ext.getCmp(mainId + '_orderCheck').setValue(1);
													Ext.getCmp(mainId + '_orderSearch').setValue('');

													var endDate = Ext.util.Format.date(Ext.getCmp(mainId + '_endYM').getValue(), 'Y-m-d');
													var startDate = Ext.util.Format.date(Ext.getCmp(mainId + '_startYM').getValue(), 'Y-m-d');

													shpStore.setBaseParam('searchItem', '{"setDate":"' + startDate + ',' + endDate + '"}');
													shpStore.load();
													boxStore.removeAll();
													bundleStore.removeAll();
													thirdGrid.getTopToolbar().get('thirdGridtitle').setText('<font color="#15428b" ><div style=font-weight:bold>內包資訊</div></font>');
													secondGrid.getTopToolbar().get('secondGridtitle').setText('<font  color="#15428b" ><div style=font-weight:bold>裝箱資訊</div></font>');
													Ext.getCmp(mainId + '_searchBox').setText('篩選');
													Ext.getCmp(mainId + '_searchMenu').hide();
												}
											}
										}
									]
								}
							]
						})
				}, '-',
				{	text: '一般Excel', tooltip: '一般Excel', iconCls: 'download', id: mainId + '_norExcel', handler: function (btn) {
						var xhr = new XMLHttpRequest();
						debugger
						xhr.open('POST', subHandler.subController + '&action=exportXls&dummy=' + new Date().getTime(), true);
						xhr.responseType = 'arraybuffer';
						xhr.onload = function () {
							if (this.status === 200) {
								var filename = "";
								var disposition = xhr.getResponseHeader('Content-Disposition');
								console.log(disposition);
								if (disposition && disposition.indexOf('attachment') !== -1) {
									var filenameRegex = /filename[^;=\n]*=((['"]).*?\2|[^;\n]*)/;
									var matches = filenameRegex.exec(disposition);

									if (matches != null && matches[1]) {
										filename = matches[1].replace(/['"]/g, '');
										filename = decodeURI(filename);
									}
								}
								var type = xhr.getResponseHeader('Content-Type');
								var blob = new Blob([this.response], { type: type });
								if (typeof window.navigator.msSaveBlob !== 'undefined') {
									// IE workaround for "HTML7007: One or more blob URLs were revoked by closing the blob for which they were created. These URLs will no longer resolve as the data backing the URL has been freed."
									window.navigator.msSaveBlob(blob, filename);
								} else {
									var URL = window.URL || window.webkitURL;
									var downloadUrl = URL.createObjectURL(blob);
									console.log(filename);
									if (filename) {
										// use HTML5 a[download] attribute to specify filename
										var a = document.createElement("a");
										// safari doesn't support this yet
										if (typeof a.download === 'undefined') {
											window.location = downloadUrl;
										} else {
											a.href = downloadUrl;
											a.download = filename;
											document.body.appendChild(a);
											a.click();
										}
									} else {
										window.location = downloadUrl;
									}
									setTimeout(function () { URL.revokeObjectURL(downloadUrl); }, 100); // cleanup
								}
							}
						};
						xhr.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');
						var params = [];
						params = 'searchItem=' + shpStore.baseParams.searchItem+ '&searchType=1';
						xhr.send(params);
					}
				}, '-',
				{
					text: '薄板Excel', tooltip: '薄板Excel', iconCls: 'download', id: mainId + '_speExcel', handler: function (btn) {
						var xhr = new XMLHttpRequest();
						xhr.open('POST', subHandler.subController + '&action=exportXls&dummy=' + new Date().getTime(), true);
						xhr.responseType = 'arraybuffer';
						xhr.onload = function () {
							if (this.status === 200) {
								var filename = "";
								var disposition = xhr.getResponseHeader('Content-Disposition');
								console.log(disposition);
								if (disposition && disposition.indexOf('attachment') !== -1) {
									var filenameRegex = /filename[^;=\n]*=((['"]).*?\2|[^;\n]*)/;
									var matches = filenameRegex.exec(disposition);
									if (matches != null && matches[1]) {
										filename = matches[1].replace(/['"]/g, '');
										filename = decodeURI(filename);
									}
								}
								var type = xhr.getResponseHeader('Content-Type');
								var blob = new Blob([this.response], { type: type });
								if (typeof window.navigator.msSaveBlob !== 'undefined') {
									// IE workaround for "HTML7007: One or more blob URLs were revoked by closing the blob for which they were created. These URLs will no longer resolve as the data backing the URL has been freed."
									window.navigator.msSaveBlob(blob, filename);
								} else {
									var URL = window.URL || window.webkitURL;
									var downloadUrl = URL.createObjectURL(blob);
									console.log(filename);
									if (filename) {
										// use HTML5 a[download] attribute to specify filename
										var a = document.createElement("a");
										// safari doesn't support this yet
										if (typeof a.download === 'undefined') {
											window.location = downloadUrl;
										} else {
											a.href = downloadUrl;
											a.download = filename;
											document.body.appendChild(a);
											a.click();
										}
									} else {
										window.location = downloadUrl;
									}
									setTimeout(function () { URL.revokeObjectURL(downloadUrl); }, 100); // cleanup
								}
							}
						};
						xhr.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');
						var params = [];
						params = 'searchItem=' + shpStore.baseParams.searchItem + '&searchType=2';
						xhr.send(params);
					}
				},
				'<span style="color:green"><b>　* 預設顯示1天內出貨資料</span><span style="color:red"></span>',
				'->',
				{	text: '一鍵展開', tooltip: '一鍵展開', iconCls: 'isView', handler: function (btn) {						
					var gridArr = [firstGrid,secondGrid,thirdGrid];//欲選擇的欄位
						if (btn.text == '一鍵展開') {
							gridArr.forEach(grid=>{
								openClose(grid,openCloseArr,false);
							})
							btn.setText('一鍵隱藏');
							btn.setTooltip('一鍵隱藏');
							btn.setIconClass('hidden');
						} else {
							gridArr.forEach(grid=>{
								openClose(grid,openCloseArr,true);
							})
							btn.setText('一鍵展開');
							btn.setTooltip('一鍵展開');
							btn.setIconClass('isView');
						}
					}
				}, '-',
				{	text: '重新整理', tooltip: '重新整理', iconCls: 'refresh', handler: function (btn) {
						Ext.getCmp(mainId + "_startYM").setValue(new Date());
						Ext.getCmp(mainId + "_endYM").setValue(new Date());

						Ext.getCmp(mainId + '_cusCheck').setValue(1);
						Ext.getCmp(mainId + '_cusSearch').setValue('');

						Ext.getCmp(mainId + '_shpCheck').setValue(1);
						Ext.getCmp(mainId + '_shpSearch').setValue('');

						Ext.getCmp(mainId + '_boxCheck').setValue(1);
						Ext.getCmp(mainId + '_boxSearch').setValue('');

						Ext.getCmp(mainId + '_bundleCheck').setValue(1);
						Ext.getCmp(mainId + '_bundleSearch').setValue('');

						Ext.getCmp(mainId + '_pnCheck').setValue(1);
						Ext.getCmp(mainId + '_pnSearch').setValue('');

						Ext.getCmp(mainId + '_qtyCheck').setValue(1);
						Ext.getCmp(mainId + '_qtySearch').setValue('');

						Ext.getCmp(mainId + '_dcCheck').setValue(1);
						Ext.getCmp(mainId + '_dcSearch').setValue('');

						Ext.getCmp(mainId + '_lotCheck').setValue(1);
						Ext.getCmp(mainId + '_lotSearch').setValue('');

						Ext.getCmp(mainId + '_scrappedCheck').setValue(1);
						Ext.getCmp(mainId + '_scrappedSearch').setValue('');

						Ext.getCmp(mainId + '_serialCheck').setValue(1);
						Ext.getCmp(mainId + '_serialSearch').setValue('');

						Ext.getCmp(mainId + '_serial2Check').setValue(1);
						Ext.getCmp(mainId + '_serial2Search').setValue('');

						Ext.getCmp(mainId + '_noteCheck').setValue(1);
						Ext.getCmp(mainId + '_noteSearch').setValue('');

						Ext.getCmp(mainId + '_orderCheck').setValue(1);
						Ext.getCmp(mainId + '_orderSearch').setValue('');

						var endDate = Ext.util.Format.date(Ext.getCmp(mainId + '_endYM').getValue(), 'Y-m-d');
						var startDate = Ext.util.Format.date(Ext.getCmp(mainId + '_startYM').getValue(), 'Y-m-d');
						shpStore.setBaseParam('searchItem', '{"setDate":"' + startDate + ',' + endDate + '"}');
						shpStore.load();
						boxStore.removeAll();
						bundleStore.removeAll();
						//*合併用的
						// shpStore.on("load",function(){gridSpan(firstGrid,"row","[cusId],[uName]");});
						Ext.getCmp(mainId + '_searchBox').setText('篩選');
						Ext.getCmp(mainId + '_searchMenu').hide();
					}
				}
			], 
        	layout: 'border',
			border:false,	
			height:'100%',
			width:'100%',
			defaults: {
				layout:'fit',
				split: true, // 調整大小	
			},
			items: [
				{
					items:gridPanel,
					collapsible: false,
					border:false,
					region: 'center',
				}
				,
				{
					items:thirdGrid,
					collapsible: false,
					border:false,
					height:500,
					region: 'south',
				}
			],
		});
		subHandler.doLayout(allGrid);
		// shpStore.load();
	}//main
	var subHandler = new getHandler();
	Ext.ux.Loader.load(["ux_checkColumn","ux_exporter"], function () {
		subHandler.initParam(layoutMain);
	}, subHandler);

}();


